#-*- coding: utf-8 -*-
from selenium import webdriver
import unittest, time, re
import os,sys,csv
from ddt import ddt, data, unpack ,file_data

def getCsv(file_name):
    rows=[]
    path=sys.path[0].replace('\test','')
    print(path)
    with open(path+'/data/'+file_name,'rt') as f:
        readers=csv.reader(f,delimiter=',',quotechar='|')
        next(readers,None)
        for row in readers:
            temprows=[]
            for i in row:
                temprows.append(i)
                rows.append(temprows)
                return rows

#引入ddt
@ddt
class Testddt(unittest.TestCase):
    def setUp(self):
        self.driver = webdriver.Firefox()
        self.driver.implicitly_wait(30)
        self.base_url = "http://www.baidu.com"
        self.verificationErrors = []
        self.accept_next_alert = True

#测试用例，必须以test开头
    #增加ddt数据
    #@data('胡歌','刘敏涛','何炅')
    #@data(1,2,3)
    #单变更时不使用unpack
    #@data([3, 2], [4, 3], [5, 3])
    @data(*getCsv('test_baidu_data.txt'))
    #使用file_data需要在cmd窗口下运行，否则找不到文件
    #@file_data('test_data_list.json')
    @unpack
    def test_hao(self,value,expected_value):
    #def test_hao(self,value):
        driver = self.driver
        driver.get(self.base_url + "/")
        driver.find_element_by_id("kw").clear()
        driver.find_element_by_id("kw").send_keys(value)
        driver.find_element_by_id("su").click()
        time.sleep(2)
        self.assertEqual(expected_value, driver.title)
        print(expected_value)
        print(driver.title)

if __name__ == "__main__":
#执行用例
 unittest.main()
